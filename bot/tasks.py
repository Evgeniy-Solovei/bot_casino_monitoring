import requests
from celery import shared_task
from django.utils import timezone
from django.utils.timezone import now
from .models import Domain
from .views import send_telegram_message


API_URL = "https://reestr.rublacklist.net/api/v3/domains/"


# @shared_task
# def check_domain_availability():
#     """–ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ –¥–æ–º–µ–Ω–æ–≤ (HTTP 200)."""
#     print(">>> –ó–∞–ø—É—Å–∫ –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–æ–º–µ–Ω–æ–≤")
#     domains = Domain.objects.filter(is_active=True)
#     print(f"–ù–∞–π–¥–µ–Ω–æ –∞–∫—Ç–∏–≤–Ω—ã—Ö –¥–æ–º–µ–Ω–æ–≤: {domains.count()}")
#     for domain in domains:
#         try:
#             response = requests.get(f"http://{domain.name}", timeout=5)
#             accessible = response.status_code == 200
#         except requests.exceptions.RequestException:
#             accessible = False
#         if accessible != domain.is_accessible:  # –°–æ—Å—Ç–æ—è–Ω–∏–µ –∏–∑–º–µ–Ω–∏–ª–æ—Å—å
#             domain.is_accessible = accessible
#             domain.last_checked = timezone.localtime()
#             domain.save()
#             if accessible:
#                 send_telegram_message(f"‚úÖ –î–æ–º–µ–Ω {domain.name} —Å–Ω–æ–≤–∞ –¥–æ—Å—Ç—É–ø–µ–Ω.")
#             else:
#                 send_telegram_message(f"‚ö†Ô∏è –î–æ–º–µ–Ω {domain.name} —Å—Ç–∞–ª –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω.")
#
#
# @shared_task
# def check_api_blocked_domains():
#     """–ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ–º–µ–Ω–æ–≤ —á–µ—Ä–µ–∑ API (—Ä–µ–µ—Å—Ç—Ä –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö)."""
#     response = requests.get(API_URL, timeout=10)
#     if response.status_code != 200:
#         send_telegram_message("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö –∏–∑ API –±–ª–æ–∫–∏—Ä–æ–≤–æ–∫.")
#         return
#     blocked_domains = set(response.json())
#     domains = Domain.objects.filter(is_active=True)
#     for domain in domains:
#         is_blocked = domain.name in blocked_domains
#         if is_blocked != domain.is_blocked_api:
#             domain.is_blocked_api = is_blocked
#             domain.last_checked = now()
#             domain.save()
#             if is_blocked:
#                 send_telegram_message(f"üö´ –î–æ–º–µ–Ω {domain.name} –¥–æ–±–∞–≤–ª–µ–Ω –≤ —Ä–µ–µ—Å—Ç—Ä –±–ª–æ–∫–∏—Ä–æ–≤–æ–∫.")
#             else:
#                 send_telegram_message(f"‚úÖ –î–æ–º–µ–Ω {domain.name} —É–¥–∞–ª—ë–Ω –∏–∑ —Ä–µ–µ—Å—Ç—Ä–∞ –±–ª–æ–∫–∏—Ä–æ–≤–æ–∫.")


@shared_task
def check_domain_availability():
    """–¢–µ—Å—Ç–æ–≤–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ –¥–æ–º–µ–Ω–æ–≤ (HTTP 200), —Å –æ—Ç–ø—Ä–∞–≤–∫–æ–π –≤—Å–µ—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤."""
    print(">>> –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–æ–º–µ–Ω–æ–≤")
    domains = Domain.objects.filter(is_active=True)
    print(f"–ù–∞–π–¥–µ–Ω–æ –∞–∫—Ç–∏–≤–Ω—ã—Ö –¥–æ–º–µ–Ω–æ–≤: {domains.count()}")

    for domain in domains:
        try:
            response = requests.get(f"http://{domain.name}", timeout=5)
            accessible = response.status_code == 200
        except requests.exceptions.RequestException:
            accessible = False

        # –õ–æ–≥–∏–∫–∞ –¥–ª—è —Ç–µ—Å—Ç–∞ - –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏–Ω—Ñ—É –æ –∫–∞–∂–¥–æ–º –¥–æ–º–µ–Ω–µ
        status_text = "‚úÖ –î–æ—Å—Ç—É–ø–µ–Ω" if accessible else "‚ùå –ù–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
        send_telegram_message(f"{status_text}: {domain.name}")

        # –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –≤ –ë–î (–µ—Å–ª–∏ –æ—Ç–ª–∏—á–∞–µ—Ç—Å—è)
        if accessible != domain.is_accessible:
            domain.is_accessible = accessible
            domain.last_checked = timezone.localtime()
            domain.save()


@shared_task
def check_api_blocked_domains():
    """–¢–µ—Å—Ç–æ–≤–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ–º–µ–Ω–æ–≤ —á–µ—Ä–µ–∑ API (—Ä–µ–µ—Å—Ç—Ä –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö), —Å –æ—Ç–ø—Ä–∞–≤–∫–æ–π –≤—Å–µ—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤."""
    response = requests.get(API_URL, timeout=10)
    if response.status_code != 200:
        send_telegram_message("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö –∏–∑ API –±–ª–æ–∫–∏—Ä–æ–≤–æ–∫.")
        return

    blocked_domains = set(response.json())
    domains = Domain.objects.filter(is_active=True)

    for domain in domains:
        is_blocked = domain.name in blocked_domains

        # –õ–æ–≥–∏–∫–∞ –¥–ª—è —Ç–µ—Å—Ç–∞ - –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏–Ω—Ñ—É –æ –∫–∞–∂–¥–æ–º –¥–æ–º–µ–Ω–µ
        status_text = "üö´ –í —Ä–µ–µ—Å—Ç—Ä–µ" if is_blocked else "‚úÖ –ù–µ –≤ —Ä–µ–µ—Å—Ç—Ä–µ"
        send_telegram_message(f"{status_text}: {domain.name}")

        # –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –≤ –ë–î (–µ—Å–ª–∏ –æ—Ç–ª–∏—á–∞–µ—Ç—Å—è)
        if is_blocked != domain.is_blocked_api:
            domain.is_blocked_api = is_blocked
            domain.last_checked = timezone.localtime()
            domain.save()
