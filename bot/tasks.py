import requests
from celery import shared_task
from django.utils import timezone
from django.utils.timezone import now
from .models import Domain
from .views import send_telegram_message


API_URL = "https://reestr.rublacklist.net/api/v3/domains/"


def send_domain_status_to_api(domain_name, status="–ù–µ –ê–∫—Ç–∏–≤–µ–Ω"):
    url = "https://api.gang-soft.com/api/take_bot_data/"
    payload = {
        "current_domain": domain_name,
        "domain_mask": domain_name,
        "status": status
    }
    headers = {
        "Content-Type": "application/x-www-form-urlencoded"
    }

    try:
        response = requests.post(url, data=payload, headers=headers, timeout=10, verify=False)  # verify=False ‚Äî –æ—Ç–∫–ª—é—á–∞–µ–º SSL
        if response.status_code == 200:
            print(f"‚úîÔ∏è –î–æ–º–µ–Ω {domain_name} —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –Ω–∞ —Å–µ—Ä–≤–µ—Ä.")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ {response.status_code}: {response.text}")
    except Exception as e:
        print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –¥–∞–Ω–Ω—ã—Ö –¥–æ–º–µ–Ω–∞ {domain_name}: {e}")


@shared_task
def check_domain_availability():
    """–¢–µ—Å—Ç–æ–≤–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ –¥–æ–º–µ–Ω–æ–≤ (HTTP 200), —Å –æ—Ç–ø—Ä–∞–≤–∫–æ–π –≤—Å–µ—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤."""
    print(">>> –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–æ–º–µ–Ω–æ–≤")
    domains = Domain.objects.filter(is_active=True)
    print(f"–ù–∞–π–¥–µ–Ω–æ –∞–∫—Ç–∏–≤–Ω—ã—Ö –¥–æ–º–µ–Ω–æ–≤: {domains.count()}")

    result_messages = []  # –°–ø–∏—Å–æ–∫ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –≤—Å–µ—Ö —Å–æ–æ–±—â–µ–Ω–∏–π

    for domain in domains:
        try:
            response = requests.get(f"http://{domain.name}", timeout=5)
            accessible = response.status_code == 200
        except requests.exceptions.RequestException:
            accessible = False

        # –õ–æ–≥–∏–∫–∞ –¥–ª—è —Ç–µ—Å—Ç–∞ - —Å–æ–∑–¥–∞–µ–º —Å—Ç—Ä–æ–∫—É –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –¥–æ–º–µ–Ω–∞
        status_text = "‚úÖ –î–æ—Å—Ç—É–ø–µ–Ω" if accessible else "‚ùå –ù–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
        result_messages.append(f"{status_text}: {domain.name}")

        # –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –≤ –ë–î (–µ—Å–ª–∏ –æ—Ç–ª–∏—á–∞–µ—Ç—Å—è)
        if accessible != domain.is_accessible:
            print(f"–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ –¥–æ–º–µ–Ω–∞ {domain.name} —Å {domain.is_accessible} –Ω–∞ {accessible}")
            domain.is_accessible = accessible
            domain.last_checked = timezone.localtime()
            domain.save()

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤—Å–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –≤ –æ–¥–Ω–æ–º —Å–æ–æ–±—â–µ–Ω–∏–∏
    if result_messages:
        send_telegram_message("\n".join(result_messages))


@shared_task
def check_api_blocked_domains():
    """–¢–µ—Å—Ç–æ–≤–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ–º–µ–Ω–æ–≤ —á–µ—Ä–µ–∑ API (—Ä–µ–µ—Å—Ç—Ä –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö), —Å –æ—Ç–ø—Ä–∞–≤–∫–æ–π –≤—Å–µ—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤."""
    response = requests.get(API_URL, timeout=10)
    if response.status_code != 200:
        send_telegram_message("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö –∏–∑ API –±–ª–æ–∫–∏—Ä–æ–≤–æ–∫.")
        return
    # –û—á–∏—Å—Ç–∫–∞ –¥–æ–º–µ–Ω–æ–≤ –æ—Ç –ª–∏—à–Ω–∏—Ö –∫–∞–≤—ã—á–µ–∫
    blocked_domains = set(domain.strip('\"') for domain in response.json())  # –£–±–∏—Ä–∞–µ–º –∫–∞–≤—ã—á–∫–∏ —Å –¥–æ–º–µ–Ω–æ–≤
    domains = Domain.objects.filter(is_active=True)
    result_messages = []  # –°–ø–∏—Å–æ–∫ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –≤—Å–µ—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
    for domain in domains:
        is_blocked = domain.name in blocked_domains
        # –õ–æ–≥–∏–∫–∞ –¥–ª—è —Ç–µ—Å—Ç–∞ - —Å–æ–∑–¥–∞–µ–º —Å—Ç—Ä–æ–∫—É –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –¥–æ–º–µ–Ω–∞
        status_text = "üö´ –í —Ä–µ–µ—Å—Ç—Ä–µ" if is_blocked else "‚úÖ –ù–µ –≤ —Ä–µ–µ—Å—Ç—Ä–µ"
        result_messages.append(f"{status_text}: {domain.name}")
        # –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –≤ –ë–î (–µ—Å–ª–∏ –æ—Ç–ª–∏—á–∞–µ—Ç—Å—è)
        if is_blocked != domain.is_blocked_api:
            print(f"–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ –¥–æ–º–µ–Ω–∞ {domain.name} —Å {domain.is_accessible} –Ω–∞ {is_blocked}")
            domain.is_blocked_api = is_blocked
            domain.last_checked = timezone.localtime()
            domain.save()
            if is_blocked:
                send_domain_status_to_api(domain.name, status="–ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω")
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤—Å–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –≤ –æ–¥–Ω–æ–º —Å–æ–æ–±—â–µ–Ω–∏–∏
    if result_messages:
        send_telegram_message("\n".join(result_messages))
